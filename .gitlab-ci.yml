default:
  image: python:3.11.3-bullseye
  cache:
    paths:
      - .cache/pip
      - .venv/
      - .cache/pre-commit
  before_script:
    # Fix Unistra GitLab Docker runner permission issues
    - export RUNNER_USER=$(ls -ld .git/ | awk '{print $3}')
    - mkdir -p .cache/pre-commit/ .venv/ .cache/pre-commit
    - chown -R $(whoami) .
    ## Install packages
    - python --version ; pip --version # For debugging
    - python -m venv .venv/
    - source .venv/bin/activate
    - pip install -r requirements.txt
  after_script:
    # Fix Unistra GitLab Docker runner permission issues
    - chown -fR "$RUNNER_USER" .cache/pre-commit/ .venv/ .cache/pre-commit
stages:
  - test
  - deploy
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
  RELEASE_TAG: '/^v\d+\.\d+\.\d+\.*$/'
test:
  stage: test
  dependencies: []
  script:
    - pre-commit run -a
  rules:
    - if: $CI_COMMIT_BRANCH
  allow_failure: true
  tags:
    - kubernetes
release_job:
  stage: deploy
  dependencies: []
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script:
    - apk add --update --no-cache git python3 && ln -sf python3 /usr/bin/python
    - git config --global --add safe.directory "$CI_PROJECT_DIR"
  script:
    - echo "Running release_job for $CI_COMMIT_TAG"
    - scripts/create_latest_release_description.sh > RELEASE_NOTES.md
  after_script: ""
  release: # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: $CI_COMMIT_TAG
    name: 'Release $CI_COMMIT_TAG'
    description: './RELEASE_NOTES.md'
  rules:
    - if: '$CI_COMMIT_TAG =~ $RELEASE_TAG' # Run this job when a release tag is created
  tags:
    - kubernetes
